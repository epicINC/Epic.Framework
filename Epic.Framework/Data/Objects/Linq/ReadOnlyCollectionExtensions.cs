// Generated by Reflector from C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Data.Entity\v4.0_4.0.0.0__b77a5c561934e089\System.Data.Entity.dll
namespace Epic.Data.Objects
{
  using System;
  using System.Collections.Generic;
  using System.Collections.ObjectModel;
  using System.Linq;
  using System.Runtime.CompilerServices;
  
  internal static class ReadOnlyCollectionExtensions
  {
    internal static ReadOnlyCollection<T> ToReadOnlyCollection<T>(this IEnumerable<T> sequence)
    {
      if (sequence == null) return DefaultReadOnlyCollection<T>.Empty;
      var onlys = sequence as ReadOnlyCollection<T>;
      if (onlys != null) return onlys;
      return new ReadOnlyCollection<T>(sequence.ToArray<T>());
    }
    
    private static class DefaultReadOnlyCollection<T>
    {
      static ReadOnlyCollection<T> defaultCollection;
      
      internal static ReadOnlyCollection<T> Empty
      {
        get
        {
          if (ReadOnlyCollectionExtensions.DefaultReadOnlyCollection<T>.defaultCollection == null)
            ReadOnlyCollectionExtensions.DefaultReadOnlyCollection<T>.defaultCollection = new ReadOnlyCollection<T>(new T[0]);
          return ReadOnlyCollectionExtensions.DefaultReadOnlyCollection<T>.defaultCollection;
        }
      }
    }
  }
}
